{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","coordX","rightSidePic","width","size","step","animation","nextImages","setState","previousImages","changeWidth","event","target","value","changeSize","changeStep","changeAnimation","this","className","style","transform","transition","props","smiles","map","smile","index","src","alt","String","type","classNames","disabled","onClick","min","max","onChange","React","Component","App","images","length","ReactDOM","render","document","getElementById"],"mappings":"uQAiBMA,E,4MACJC,MAAQ,CACNC,OAAQ,EACRC,aAAc,GACdC,MAAO,IACPC,KAAM,EACNC,KAAM,EACNC,UAAW,K,EAGbC,WAAa,WACX,MAEI,EAAKP,MADPC,EADF,EACEA,OAAQC,EADV,EACUA,aAAcC,EADxB,EACwBA,MAAOC,EAD/B,EAC+BA,KAAMC,EADrC,EACqCA,KAGjCJ,MAAqB,GAARE,EACbC,EAAOD,KAIPD,EAAeG,GAAQD,EACzB,EAAKI,UAAS,SAACR,GAAD,MAAY,CACxBC,SAAwB,GAAdD,EAAMG,MAAaH,EAAMG,MAAQH,EAAMI,MACjDF,aAAcF,EAAMI,SAGtB,EAAKI,UAAS,SAACR,GAAD,MAAY,CACxBC,OAAQD,EAAMC,OAASD,EAAMG,MAAQH,EAAMK,KAC3CH,aAAcF,EAAME,aAAeF,EAAMK,W,EAK/CI,eAAiB,WACf,MAA+B,EAAKT,MAA5BE,EAAR,EAAQA,aAAcG,EAAtB,EAAsBA,KAED,KAAjBH,IAIAA,EAAeG,GAAQ,IACzB,EAAKG,SAAS,CAAEP,OAAQ,IACxB,EAAKO,SAAS,CAAEN,aAAc,MAE9B,EAAKM,UAAS,SAACR,GAAD,MAAY,CACxBC,OAAQD,EAAMC,OAASD,EAAMG,MAAQH,EAAMK,KAC3CH,aAAcF,EAAME,aAAeF,EAAMK,W,EAK/CK,YAAc,SAACC,GACb,EAAKH,SAAS,CAAEL,OAAQQ,EAAMC,OAAOC,QACrC,EAAKL,SAAS,CAAEP,OAAQ,K,EAG1Ba,WAAa,SAACH,GACZ,EAAKH,SAAS,CAAEJ,MAAOO,EAAMC,OAAOC,QACpC,EAAKL,SAAS,CAAEP,OAAQ,K,EAG1Bc,WAAa,SAACJ,GACZ,EAAKH,SAAS,CAAEH,MAAOM,EAAMC,OAAOC,S,EAGtCG,gBAAkB,SAACL,GACjB,EAAKH,SAAS,CAAEF,WAAYK,EAAMC,OAAOC,S,4CAG3C,WACE,MAEII,KAAKjB,MADPC,EADF,EACEA,OAAQC,EADV,EACUA,aAAcC,EADxB,EACwBA,MAAOC,EAD/B,EAC+BA,KAAMC,EADrC,EACqCA,KAAMC,EAD3C,EAC2CA,UAG3C,OACE,sBAAKY,UAAU,iBAAiBC,MAAO,CAAEhB,MAAM,GAAD,OAAKA,EAAQC,EAAb,OAA9C,UACE,qBAAKc,UAAU,YAAf,SACE,qBAAKA,UAAU,WAAf,SACE,oBACEA,UAAU,gBACVC,MAAO,CACLC,UAAU,cAAD,OAAgBnB,EAAhB,OACToB,WAAW,aAAD,OAAef,EAAf,OAJd,SAOGW,KAAKK,MAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACrB,oBAEER,UAAU,OAFZ,SAIE,qBACES,IAAKF,EACLG,IAAKC,OAAOH,EAAQ,GACpBR,UAAU,SACVC,MAAO,CAAEhB,MAAM,GAAD,OAAKA,EAAL,UAPXsB,YAef,sBAAKP,UAAU,UAAf,UACE,wBACEY,KAAK,SACLZ,UAAWa,IACT,SACA,CACEC,SAA2B,KAAjB9B,IAGd+B,QAAShB,KAAKR,eARhB,kBAaA,wBACEqB,KAAK,SACLZ,UAAWa,IACT,SACA,CACEC,SAAU/B,MAAqB,GAARE,EAAaC,EAAOD,KAG/C8B,QAAShB,KAAKV,WACd,UAAQ,OATV,qBAeF,sBAAKW,UAAU,cAAf,UACE,wBAAOA,UAAU,QAAjB,UACG,cACD,uBACEY,KAAK,SACLI,IAAK,IACLC,IAAK,IACL9B,KAAM,GACNQ,MAAOV,EACPiC,SAAUnB,KAAKP,iBAInB,wBAAOQ,UAAU,QAAjB,UACG,cACD,uBACEY,KAAK,SACLI,IAAK,EACLC,IAAK,GACL9B,KAAM,EACNQ,MAAOT,EACPgC,SAAUnB,KAAKH,gBAInB,wBAAOI,UAAU,QAAjB,UACG,SACD,uBACEY,KAAK,SACLI,IAAK,EACLC,IAAK,EACL9B,KAAM,EACNQ,MAAOR,EACP+B,SAAUnB,KAAKF,gBAInB,wBAAOG,UAAU,QAAjB,UACG,sBACD,uBACEY,KAAK,SACLI,IAAK,IACLC,IAAK,IACL9B,KAAM,IACNQ,MAAOP,EACP8B,SAAUnB,KAAKD,+B,GAhLNqB,IAAMC,WAyLdvC,IClMTwC,E,4MACJvC,MAAQ,CACNwC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWvB,KAAKjB,MAAhBwC,OAER,OACE,sBAAKtB,UAAU,MAAf,UACE,oBAAI,UAAQ,QAAZ,iCACqBsB,EAAOC,OAD5B,aAIA,cAAC,EAAD,CAAUlB,OAAQiB,W,GAzBRH,IAAMC,WA+BTC,ICpCfG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7758262b.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  smiles: string[];\n};\n\ntype State = {\n  coordX: number;\n  rightSidePic: number;\n  width: number;\n  size: number;\n  step: number;\n  animation: number;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    coordX: 0,\n    rightSidePic: 10,\n    width: 130,\n    size: 3,\n    step: 3,\n    animation: 1000,\n  };\n\n  nextImages = () => {\n    const {\n      coordX, rightSidePic, width, size, step,\n    } = this.state;\n\n    if (coordX === -(width * 10\n      - size * width)) {\n      return;\n    }\n\n    if (rightSidePic - step <= size) {\n      this.setState((state) => ({\n        coordX: -(state.width * 10 - state.width * state.size),\n        rightSidePic: state.size,\n      }));\n    } else {\n      this.setState((state) => ({\n        coordX: state.coordX - state.width * state.step,\n        rightSidePic: state.rightSidePic - state.step,\n      }));\n    }\n  };\n\n  previousImages = () => {\n    const { rightSidePic, step } = this.state;\n\n    if (rightSidePic === 10) {\n      return;\n    }\n\n    if (rightSidePic + step >= 10) {\n      this.setState({ coordX: 0 });\n      this.setState({ rightSidePic: 10 });\n    } else {\n      this.setState((state) => ({\n        coordX: state.coordX + state.width * state.step,\n        rightSidePic: state.rightSidePic + state.step,\n      }));\n    }\n  };\n\n  changeWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ width: +event.target.value });\n    this.setState({ coordX: 0 });\n  };\n\n  changeSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ size: +event.target.value });\n    this.setState({ coordX: 0 });\n  };\n\n  changeStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  changeAnimation = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animation: +event.target.value });\n  };\n\n  render() {\n    const {\n      coordX, rightSidePic, width, size, step, animation,\n    } = this.state;\n\n    return (\n      <div className=\"smallContainer\" style={{ width: `${width * size}px` }}>\n        <div className=\"container\">\n          <div className=\"Carousel\">\n            <ul\n              className=\"Carousel_list\"\n              style={{\n                transform: `translateX(${coordX}px)`,\n                transition: `transform ${animation}ms`,\n              }}\n            >\n              {this.props.smiles.map((smile, index) => (\n                <li\n                  key={smile}\n                  className=\"list\"\n                >\n                  <img\n                    src={smile}\n                    alt={String(index + 1)}\n                    className=\"images\"\n                    style={{ width: `${width}px` }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              {\n                disabled: rightSidePic === 10,\n              },\n            )}\n            onClick={this.previousImages}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              {\n                disabled: coordX === -(width * 10 - size * width),\n              },\n            )}\n            onClick={this.nextImages}\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n        </div>\n\n        <div className=\"constructor\">\n          <label className=\"label\">\n            {'ItemWidth: '}\n            <input\n              type=\"number\"\n              min={130}\n              max={200}\n              step={10}\n              value={width}\n              onChange={this.changeWidth}\n            />\n          </label>\n\n          <label className=\"label\">\n            {'FrameSize: '}\n            <input\n              type=\"number\"\n              min={3}\n              max={10}\n              step={1}\n              value={size}\n              onChange={this.changeSize}\n            />\n          </label>\n\n          <label className=\"label\">\n            {'Step: '}\n            <input\n              type=\"number\"\n              min={1}\n              max={5}\n              step={1}\n              value={step}\n              onChange={this.changeStep}\n            />\n          </label>\n\n          <label className=\"label\">\n            {'AnimationDuration: '}\n            <input\n              type=\"number\"\n              min={1000}\n              max={3000}\n              step={500}\n              value={animation}\n              onChange={this.changeAnimation}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          { `Carousel with ${images.length} images` }\n        </h1>\n\n        <Carousel smiles={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}